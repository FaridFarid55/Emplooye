// <auto-generated />
using System;
using FirstApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstApp.Migrations
{
    [DbContext(typeof(HrContext))]
    [Migration("20240419162454_EmployeesAllowancesMigration")]
    partial class EmployeesAllowancesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstApp.Models.AllowancesModel", b =>
                {
                    b.Property<int>("AllowancesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AllowancesId"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("AllowancesId");

                    b.ToTable("TbAllowancesModel");
                });

            modelBuilder.Entity("FirstApp.Models.DepartmentsModel", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DepartmentId");

                    b.ToTable("TbDepartment");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeeVacationModel", b =>
                {
                    b.Property<int>("EmployeeVacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeVacationId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("VacationType")
                        .HasColumnType("int");

                    b.HasKey("EmployeeVacationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TbEmployeeVacation");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeesAllowancesModel", b =>
                {
                    b.Property<int>("EmployeesAllowancesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeesAllowancesId"));

                    b.Property<int>("AllowancesId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesAllowancesId");

                    b.HasIndex("AllowancesId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("TbEmployeesAllowancesModel");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("imgName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("TbEmployees");
                });

            modelBuilder.Entity("FirstApp.Models.InvoiceDetails", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceModelInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceModelInvoiceId");

                    b.ToTable("TbInvoiceDetails");
                });

            modelBuilder.Entity("FirstApp.Models.InvoiceModel", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("HasShipping")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("InvoiceId");

                    b.ToTable("TbInvoiceModel");
                });

            modelBuilder.Entity("FirstApp.Models.PersonModel", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PersonId");

                    b.ToTable("TbPersonModel");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeeVacationModel", b =>
                {
                    b.HasOne("FirstApp.Models.EmployeesModel", "TbEmployee")
                        .WithMany("EmployeeVacation")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbEmployee");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeesAllowancesModel", b =>
                {
                    b.HasOne("FirstApp.Models.AllowancesModel", "TbAllowances")
                        .WithMany("EmployeesAllowances")
                        .HasForeignKey("AllowancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstApp.Models.EmployeesModel", "TbEmployees")
                        .WithMany("EmployeesAllowances")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbAllowances");

                    b.Navigation("TbEmployees");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeesModel", b =>
                {
                    b.HasOne("FirstApp.Models.DepartmentsModel", "TbDepartment")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstApp.Models.PersonModel", "TbPerson")
                        .WithOne("TbEmployees")
                        .HasForeignKey("FirstApp.Models.EmployeesModel", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbDepartment");

                    b.Navigation("TbPerson");
                });

            modelBuilder.Entity("FirstApp.Models.InvoiceDetails", b =>
                {
                    b.HasOne("FirstApp.Models.InvoiceModel", "TbInvoiceDetails")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstApp.Models.InvoiceModel", null)
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceModelInvoiceId");

                    b.Navigation("TbInvoiceDetails");
                });

            modelBuilder.Entity("FirstApp.Models.AllowancesModel", b =>
                {
                    b.Navigation("EmployeesAllowances");
                });

            modelBuilder.Entity("FirstApp.Models.DepartmentsModel", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FirstApp.Models.EmployeesModel", b =>
                {
                    b.Navigation("EmployeeVacation");

                    b.Navigation("EmployeesAllowances");
                });

            modelBuilder.Entity("FirstApp.Models.InvoiceModel", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("FirstApp.Models.PersonModel", b =>
                {
                    b.Navigation("TbEmployees")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
